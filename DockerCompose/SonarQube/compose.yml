services:
  sonarqube:
    image: sonarqube:community
    hostname: sonarqube
    container_name: sonarqube
    depends_on:
      - database
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://database:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    # Labels for Traefik
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.docker.network=traefik_network"
    #   - "traefik.http.routers.sonarqube.entrypoints=websecure"
    #   - "traefik.http.routers.sonarqube.rule=Host(`mydomain.com`)"
    #   - "traefik.http.services.sonarqube.loadbalancer.server.port=9000"
    #   - "traefik.http.routers.sonarqube.tls=true"
    #   - "traefik.http.routers.sonarqube.tls.certresolver=production"
    volumes:
      - sonarqube_data:/opt/sonarqube
    ports:
      - "9000:9000"
    networks:
      # - traefik_network
      - internal

      
  database:
    image: postgres:15.3-alpine3.18
    hostname: postgresql
    container_name: postgre-sonarqube
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - postgresql_data:/var/lib/postgresql
    networks:
      - internal


volumes:
  sonarqube_data:
    driver: local
    
  postgresql_data:
    driver: local


networks:
  internal:
    driver: bridge

  # Docker network for Traefik
  # traefik_network:
  #   external: true